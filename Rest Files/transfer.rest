########## GET ENDPOINTS ##########

### gets all transfers
Get http://localhost:3000/api/v1/transfers
API_KEY : a1b2c3d4e5
Content-Type: application/json
###

### gets a transfer based on id 1
Get http://localhost:3000/api/v1/transfers/1
API_KEY : a1b2c3d4e5
Content-Type: application/json
###

### gets items in a transfer
Get http://localhost:3000/api/v1/transfers/1/items
API_KEY : a1b2c3d4e5
Content-Type: application/json
###





########## PUT ENDPOINTS ##########

### updates a transfer based on id 1
PUT http://localhost:3000/api/v1/transfers/1
API_KEY : a1b2c3d4e5
Content-Type: application/json

{
    "id": 1,
    "reference": "TR00001",
    "transfer_from": null,
    "transfer_to": 9229,
    "transfer_status": "Completed",
    "created_at": "2000-03-11T13:11:14Z",
    "updated_at": "2000-03-12T16:11:14Z",
    "items": [
        {
            "item_id": "P007435",
            "amount": 23
        }
    ]
}
###

### activates the transfer, it updates the inventories for all items inside the transfer 
### the recieving inventory gets increased and the giving inventory decreased
PUT http://localhost:3000/api/v1/transfers/1/commit
API_KEY : a1b2c3d4e5
Content-Type: application/json
###





########## POST ENDPOINTS ##########

### adds a new transfer to database
POST http://localhost:3000/api/v1/transfers
API_KEY : a1b2c3d4e5
Content-Type: application/json

{
    "id": 1,
    "reference": "TR00001",
    "transfer_from": null,
    "transfer_to": 9229,
    "transfer_status": "Completed",
    "created_at": "2000-03-11T13:11:14Z",
    "updated_at": "2000-03-12T16:11:14Z",
    "items": [
        {
            "item_id": "P007435",
            "amount": 23
        }
    ]
}
###





########## DELETE ENDPOINTS ##########

### removes a transfer based on id 1
DELETE http://localhost:3000/api/v1/transfers/1
API_KEY : a1b2c3d4e5
###



### Marked Wrong Endpoints ###
# The POST and PUT endpoints accept incomplete, resulting in inconsistent data in the json
# The POST and PUT endpoints accepts existing id's, leading to double id's
# The GET, PUT and DELETE endpoint accepts nonexistent id's 

# The PUT commit endpoint does not work