########## GET ENDPOINTS ##########

### gets all locations
Get http://localhost:3000/api/v1/locations
API_KEY : a1b2c3d4e5
Content-Type: application/json
###

### gets a locations based on id 1
Get http://localhost:3000/api/v1/locations/1
API_KEY : a1b2c3d4e5
Content-Type: application/json
###





########## PUT ENDPOINTS ##########

### updates a location based on id 1
PUT http://localhost:3000/api/v1/locations/1
API_KEY : a1b2c3d4e5
Content-Type: application/json

{
    "id": 1,
    "warehouse_id": 1,
    "code": "A.1.0",
    "name": "Row: A, Rack: 1, Shelf: 0",
    "created_at": "1992-05-15 03:21:32",
    "updated_at": "1992-05-15 03:21:32"
}
###





########## POST ENDPOINTS ##########

### adds a new location to database
POST http://localhost:3000/api/v1/locations
API_KEY : a1b2c3d4e5
Content-Type: application/json

{
    "id": 1,
    "warehouse_id": 1,
    "code": "A.1.0",
    "name": "Row: A, Rack: 1, Shelf: 0",
    "created_at": "1992-05-15 03:21:32",
    "updated_at": "1992-05-15 03:21:32"
}
###





########## DELETE ENDPOINTS ##########

### removes a location based on id 1
DELETE http://localhost:3000/api/v1/locations/1
API_KEY : a1b2c3d4e5
###



### Marked Wrong Endpoints ###
# The POST and PUT endpoints accept incomplete, resulting in inconsistent data in the json
# The POST and PUT endpoints accepts existing id's, leading to double id's
# The GET, PUT and DELETE endpoint accepts nonexistent id's 
