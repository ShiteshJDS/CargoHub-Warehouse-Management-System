########## GET ENDPOINTS ##########

# gets all warehouses
Get http://localhost:3000/api/v1/warehouses
API_KEY : a1b2c3d4e5
Content-Type: application/json
###

# gets a warehouse based on id 1
Get http://localhost:3000/api/v1/warehouses/
API_KEY : a1b2c3d4e5
Content-Type: application/json
###


### gets all locations of warehouse with id 1
Get http://localhost:3000/api/v1/warehouses/1/locations
API_KEY : a1b2c3d4e5
Content-Type: application/json






########## PUT ENDPOINTS ##########

# updates a warehouse based on id 1
PUT http://localhost:3000/api/v1/warehouses/1
API_KEY : a1b2c3d4e5
Content-Type: application/json

{
    "id": 1,
     "code": "YQZZNL57", 
     "name": "Heemskerk cargo hub 2", 
     "address": "Karlijndreef 281", 
     "zip": "4002 AS", 
     "city": "Heemskerk", 
     "province": "Friesland", 
     "country": "NL", 
     "contact": 
        {
        "name": "Fem Keijzer", 
        "phone": "(078) 0013363", 
        "email": "blamore@example.net"
        }, 
     "created_at": "1983-04-13 04:59:55", 
     "updated_at": "2007-01-08 20:11:00"
}
###






########## POST ENDPOINTS ##########

# adds a new warehouse to database
POST http://localhost:3000/api/v1/warehouses/
API_KEY : a1b2c3d4e5
Content-Type: application/json

{
    "id": 56,
     "code": "YQZZNL56", 
     "name": "Heemskerk cargo hub", 
     "address": "Karlijndreef 281", 
     "zip": "4002 AS", 
     "city": "Heemskerk", 
     "province": "Friesland", 
     "country": "NL", 
     "contact": 
        {
        "name": "Fem Keijzer", 
        "phone": "(078) 0013363", 
        "email": "blamore@example.net"
        }, 
     "created_at": "1983-04-13 04:59:55", 
     "updated_at": "2007-01-08 20:11:00"
}
###






########## DELETE ENDPOINTS ##########

# removes a warehouse based on id 1
DELETE http://localhost:3000/api/v1/warehouses/1
API_KEY : a1b2c3d4e5

###



### Marked Wrong Endpoints ###
# The POST and PUT endpoints accept incomplete, resulting in inconsistent data in the json
# The POST and PUT endpoints accepts existing id's, leading to double id's
# The GET, PUT and DELETE endpoint accepts nonexistent id's 
